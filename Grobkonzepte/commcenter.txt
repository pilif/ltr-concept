$Id: commcenter.txt,v 1.3 2000-12-02 16:00:38 pilif Exp $
Commcenter 1.2
--------------

1) Problemstellung
In [1] wurde auf Probleme mit der Kommunikation zwischen verschiedenen
Usern kurz eingegangen. Dieses Konzept soll eine Lösung zu diesem
Problem darstellen: Die Benutzer-Kommunikation in linktrail ist momentan
ein Huhn-Ei-Problem: Viele Benutzer geben an, dass ihre Email-Adresse nur
für Freunde zu sehen ist, erlauben aber Freundschaften (mit guten Recht)
nur für Benutzer, die auch mit ihnen gesprochen haben, was damit
schlussendlich darauf hinausläuft, dass nur Freundschaften entstehen
können zwischen Usern, die sich bereits irgendwie kennnen.

Es gilt nun, eine Lösung zu finden, die sowohl eine sichere
Kommunikation zwischen 2 Benutzern von linktrail ermöglichen soll, aber
dennoch wenig Lernaufwand mit sich bringt und die Privatsphäre der
Benutzer im System zusätzlich noch wahrt.


2) Analyse
Aus der Problemstellung ergeben sich folgende Vorausseztungen:

 *) Minimaler Lernaufwand: Das System soll für den Benutzer einfach
    zu erlernen sein. Einer der Möglichkeiten, dieses Problem anzugehen,
    ist es, die Kommunikation in den sicheren Grenzen von Linktrail
    ablaufen zu lassen. Es sollten keine externe Programme für die
    Kommunikation notwenig sein.
 *) Privatsphäre: Ein Benutzer sollte seine ICQ-Nummer und seine
    Email-Adresse nicht allen linktrail-Benutzern zeigen müssen, da er
    sich vor Spam schützen will. Damit muss eine Abstraktionsebene
    zwischen den beiden Kommunizierenden Usern geschaffen werden.
 *) Kontextbezug: Mit einer Person will man zu 2 verschiendenen
    Zeitpunkten in Kontakt treten: 1) um einen defekten Link oder einen
    guten Trail zu melden (also innerhalb des Trail-Fensters), oder 2)
    um ein allgemeines Kompliment zu machen (am besten von der Mypage des
    Ziel-Users aus)


3) Darstellung
Dadurch ergibt sich folgendes Kommunikationskonzept: 

Linktrail bietet in einem Trail-Fenster oder auf der Mypage eines
Benutzers die Möglichkeit, eine Nachricht für den Erzeuger/Benutzer
abzusetzen. Dazu muss man selbst registriert sein.

Die Nachricht erscheint nach dem Absenden im sog. Kommunikationscenter
des Enpfängers. Dieses kann er über ein neues Iwantto-Item im Directory
("Iwantto - Go to message center (xx new message(s))") erreicht werden. 

In Tabellenform sind alle Nachrichten an den User aufgelistet. Er kann
sie von dort aus lesen, beantworten und auch aus der Liste löschen. 

Durch die Einführung eins Kommunikationscenters eröffnet sich
gleichzeitig der Weg für eine neue Form der Benutzerführung und
Kommunikation, die es erlaubt, viele momentan dezentrale Funktionen von
linktrail unter einem Hut zu verbinden und damit die Grundlage für eine
effizientere Bedienung durch den Benutzer zu schaffen. Im Folgenden 
sollen diese Nachrichten dargelegt werden:

3.1) Nachrichten-Typen
Innerhalb des hier beschriebenen Kommunikations-Centers werden
verschiendene Nachrichten verwendet. Folgende Nachrichten-Klassen sind
anzutreffen. Zahlen in eckigen Klammern geben dabei die jeweilige 
systeminterne Nachrichtennummer (wobei intern 1000+<nummer>
verwendet wird) an. Diese Nummern entstammen einer früheren Version des
Konzepts, die mehr Nachrichtentypen verwendete:

A1) Standard-Messages (User->User) [9]
    
    Aktion:          User versendet eine Nachricht an einen anderen
    Möglichkeiten:   lesen, löschen. "Lesen" zeigt ein Antwort-Formular
                     an, das dem Benutzer ein Beantworten der Nachricht
		     erlaubt. Der Antwort wird die aktuelle Nachricht
		     als "in Reply to" mitgesendet. Nach Absenden der
		     Antwort befindet sich eine Kopie in der "Outbox"
    Automatisiert:   nichts.
    System:          keine Auswirkungen
    
A2) Standard-Messages (linktrail->User) [1-3, 13-19]
    
    Aktion:          Linktrail versendet eine Nachricht an einen User.
                     Dies ist eine Benachrichtigung, dass ein Trail
		     gelöscht wurde, ein Announcement, dass ein Poll
		     begonnen hat, dass ein Trail zu einem Slot wurde,
		     dass ein User FE wurde [2] (und die Gegenstücke)
    Möglichkeiten:   lesen, löschen. 
    Automatisiert:   nichts.
    System:          keine Auswirkungen
    
B) Recommendation-Messages (User->User) [8]
    
    Aktion:          User empfielt einen Trail andern Usern
    Möglichkeiten:   lesen, löschen, subscribe
    Automatisiert:   nichts.
    System:          Wahl von "subscribe" subscribed den Trail
    
C) Friendship-Messages (User->User) [11, 12]
    
    Aktion:          User requested eine Freundschaft
    Möglichkeiten:   lesen, annehmen, verwerfen
    Automatisiert:   Annemen und verwerfen informieren den User, der den
                     Request gestellt hat, über die Entscheidung.
		     Ebenfalls erfolgt eine Benachrictigung, wenn einer
		     der User die Freundschaft kündet.
    System:          Annehmen: Freundschaft wird hergestellt
    
 
 3.3) Darstellung beim Benutzer 
   3.3.1) Allgemein
Diese grosse Komplxität muss beim Benutzer des Systemes auf ein Minimum
reduziert werden. Das Benutzerinterface der Features ist damit sehr
einfach ausgefallen: 

Im Trail-Subscribe-Fenster werden die beiden Momentan vorhandenen
Checkboxen entfernt. Es werden keine Reports über trails mehr generiert.

Friendship-Requests und Recommendations kann ein kleiner Text "mit auf
den Weg" gegeben werden.

  3.3.2) Anzeige der Nachgrichten
Nachrichten können im Message-Center eines Benutzers (über das
IWANTTO-Feld erreichbar) gelesen werden. Das Message-Center ist 3-Stufig
aufgebaut:

  1) Nachrichten lesen: Neue Nachrichten nach 3.1 erscheinen hier
  2) Outbox: Versendete Nachrichten erscheinen hier.
  3) Compose: Erlaubt das Versenden einer Nachricht an einen Freunden.

Die Navigation erfolgt wie bei der Tour mit einer Text-Liste.
 

4) Betrachtung
Dieses neue Kommunikationskonzept wird die Philosophie von linktrail
grundlegend verändern, resp. wird die Applikation endlich der Philosopie
angleichen. Linktrail heisst Kommunikation und Kooperation. Dieses
Kommunikationskonzept wird alle Kommunikations-Features von linktrail
(Recommendations, Subscriptions und Friendships) unter einen Hut bringen
und mit einer weiteren Ebene der Kommunikation garnieren (die
User-Messages; MID=9).

Der Entwicklungsaufwand, der in diesem Fall wegen der Umfangreichen
Änderungen sehr hoch ausfallen wird, ist damit mehr als gerechtfertigt.


5) Zeitplan/Verantwortung
  
  Templates:          Fabian/Philip 5 Stunden
  Programmierkonzept: Philip: 8 stunden
  Realisation:        Philip: Konzeptabhängig. Mehr als 30 Stunden
    

philip.hofstetter@linktrail.com
16.10.00

updated:
philip.hofstetter@linktrail.com
19.10.00

updated:
philip.hofstetter@linktrail.com
06.11.00

Changes: 
Kein Change-Log mehr, da neu CVS Verwendung findet.

-- 
1) userfeedback.txt
2) ltrTopExperts.txt
